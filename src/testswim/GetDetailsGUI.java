
package testswim;



public class GetDetailsGUI extends javax.swing.JFrame {

    boolean nextButtonPressed=false;
    AddPeople addpeople;
    SwimmingGUI swimmingGui;
    public ScoreBoard scoreBoard;
    
    public GetDetailsGUI(ScoreBoard scoreBoard) {

        initComponents();
        this.scoreBoard=scoreBoard;
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        addpeople=new AddPeople(scoreBoard);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser();
        jFrame2 = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SwimmerTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JudgeTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        SupportingStaffTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        SpectatorTable = new javax.swing.JTable();
        genderChooseBox = new javax.swing.JComboBox();
        addButton = new javax.swing.JButton();
        typeComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 976, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTabbedPane2.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));
        jTabbedPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel6.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));

        jScrollPane1.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));

        SwimmerTable.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));
        SwimmerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Swimmer 1", "", ""},
                {"Swimmer 2", "", ""},
                {"Swimmer 3", "", ""},
                {"Swimmer 4", "", ""},
                {"Swimmer 5", "", ""}
            },
            new String [] {
                "#", "Name", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SwimmerTable.setRowHeight(77);
        jScrollPane1.setViewportView(SwimmerTable);
        if (SwimmerTable.getColumnModel().getColumnCount() > 0) {
            SwimmerTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            SwimmerTable.getColumnModel().getColumn(0).setMaxWidth(100);
            SwimmerTable.getColumnModel().getColumn(1).setMaxWidth(1000);
            SwimmerTable.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Swimmers", jPanel6);

        jPanel7.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));

        JudgeTable.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));
        JudgeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Main judge", ""},
                {"Judge 1", ""},
                {"Judge 2", ""},
                {"Judge 3", ""},
                {"Judge 4", ""},
                {"Judge 5", ""}
            },
            new String [] {
                "#", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JudgeTable.setRowHeight(64);
        jScrollPane2.setViewportView(JudgeTable);
        if (JudgeTable.getColumnModel().getColumnCount() > 0) {
            JudgeTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            JudgeTable.getColumnModel().getColumn(0).setMaxWidth(100);
            JudgeTable.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Judges", jPanel7);

        jPanel8.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));

        SupportingStaffTable.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));
        SupportingStaffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", ""},
                {"2", ""},
                {"3", ""},
                {"4", ""},
                {"5", ""}
            },
            new String [] {
                "#", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SupportingStaffTable.setPreferredSize(new java.awt.Dimension(150, 385));
        SupportingStaffTable.setRowHeight(77);
        jScrollPane4.setViewportView(SupportingStaffTable);
        if (SupportingStaffTable.getColumnModel().getColumnCount() > 0) {
            SupportingStaffTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            SupportingStaffTable.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Supporting Staff", jPanel8);

        jPanel9.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));
        jPanel9.setBorder(null);

        SpectatorTable.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));
        SpectatorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", ""},
                {"2", ""},
                {"3", ""},
                {"4", ""},
                {"5", ""},
                {"6", ""},
                {"7", ""},
                {"8", ""},
                {"9", ""},
                {"10", ""},
                {"11", ""},
                {"12", ""},
                {"13", ""},
                {"14", ""},
                {"15", ""},
                {"16", ""},
                {"17", ""},
                {"18", ""},
                {"19", ""},
                {"20", ""}
            },
            new String [] {
                "#", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SpectatorTable.setPreferredSize(new java.awt.Dimension(175, 385));
        SpectatorTable.setRowHeight(18);
        jScrollPane5.setViewportView(SpectatorTable);
        if (SpectatorTable.getColumnModel().getColumnCount() > 0) {
            SpectatorTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            SpectatorTable.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Spectators", jPanel9);

        genderChooseBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male Tournament", "Female Tournament" }));
        genderChooseBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderChooseBoxActionPerformed(evt);
            }
        });

        addButton.setText("Add information");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Butterfly Stroke", "Back Stroke", "Breast Stroke", "Free Style" }));

        jLabel1.setFont(new java.awt.Font("sansserif", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Note: press enter after enter the text in every table then press Add information button");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(genderChooseBox, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genderChooseBox, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void genderChooseBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderChooseBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderChooseBoxActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        addpeople.setGuiAddress(this);
        addpeople.addall();
        
        addpeople.printCountOfPersons();    //print people count in comsole
        
        swimmingGui=new SwimmingGUI(addpeople.allpeople,scoreBoard);
//        swimmingGui.scoreBoard=scoreBoard;
        

    }//GEN-LAST:event_addButtonActionPerformed
    
   
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GetDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GetDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GetDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GetDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new GetDetailsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JudgeTable;
    private javax.swing.JTable SpectatorTable;
    private javax.swing.JTable SupportingStaffTable;
    private javax.swing.JTable SwimmerTable;
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox genderChooseBox;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JComboBox typeComboBox;
    // End of variables declaration//GEN-END:variables

/////////////////////////give swimmer details/////////////////
public String getSwimmer1name(){
    return (String) SwimmerTable.getModel().getValueAt(0, 1);
}
public String getSwimmer2name(){
    return (String) SwimmerTable.getModel().getValueAt(1, 1);
}
public String getSwimmer3name(){
    return (String) SwimmerTable.getModel().getValueAt(2, 1);
}
public String getSwimmer4name(){
    return (String) SwimmerTable.getModel().getValueAt(3, 1);
}
public String getSwimmer5name(){
    return (String) SwimmerTable.getModel().getValueAt(4, 1);
}

public String getSwimmer1age(){
    return (String) SwimmerTable.getModel().getValueAt(0, 2);
}
public String getSwimmer2age(){
    return (String) SwimmerTable.getModel().getValueAt(1, 2);
}
public String getSwimmer3age(){
    return (String) SwimmerTable.getModel().getValueAt(2, 2);
}
public String getSwimmer4age(){
    return (String) SwimmerTable.getModel().getValueAt(3, 2);
}
public String getSwimmer5age(){
    return (String) SwimmerTable.getModel().getValueAt(4, 2);
}
/////////////////////////gave swimmer details/////////////////


///////////////get judge details////////////////////////
public String getMainJudgename(){
    return (String) JudgeTable.getModel().getValueAt(0, 1);
}
public String getJudge1name(){
    return (String) JudgeTable.getModel().getValueAt(1, 1);
}
public String getJudge2name(){
    return (String) JudgeTable.getModel().getValueAt(2, 1);
}
public String getJudge3name(){
    return (String) JudgeTable.getModel().getValueAt(3, 1);
}
public String getJudge4name(){
    return (String) JudgeTable.getModel().getValueAt(4, 1);
}
public String getJudge5name(){
    return (String) JudgeTable.getModel().getValueAt(5, 1);
}
/////////////got judge details///////////////////////////////

/////////////get supportingStaff details////////////////////
public String getSupportingStaff1name(){
    return (String) SupportingStaffTable.getModel().getValueAt(0, 1);
}
public String getSupportingStaff2name(){
    return (String) SupportingStaffTable.getModel().getValueAt(1, 1);
}
public String getSupportingStaff3name(){
    return (String) SupportingStaffTable.getModel().getValueAt(2, 1);
}
public String getSupportingStaff4name(){
    return (String) SupportingStaffTable.getModel().getValueAt(3, 1);
}
public String getSupportingStaff5name(){
    return (String) SupportingStaffTable.getModel().getValueAt(4, 1);
}
/////////////got supportingStaff details////////////////////

/////////////get spectator details////////////////////
public String getSpectator1name(){
    return (String) SpectatorTable.getModel().getValueAt(0, 1);
}
public String getSpectator2name(){
    return (String) SpectatorTable.getModel().getValueAt(1, 1);
}
public String getSpectator3name(){
    return (String) SpectatorTable.getModel().getValueAt(2, 1);
}
public String getSpectator4name(){
    return (String) SpectatorTable.getModel().getValueAt(3, 1);
}
public String getSpectator5name(){
    return (String) SpectatorTable.getModel().getValueAt(4, 1);
}
public String getSpectator6name(){
    return (String) SpectatorTable.getModel().getValueAt(5, 1);
}
public String getSpectator7name(){
    return (String) SpectatorTable.getModel().getValueAt(6, 1);
}
public String getSpectator8name(){
    return (String) SpectatorTable.getModel().getValueAt(7, 1);
}
public String getSpectator9name(){
    return (String) SpectatorTable.getModel().getValueAt(8, 1);
}
public String getSpectator10name(){
    return (String) SpectatorTable.getModel().getValueAt(9, 1);
}
public String getSpectator11name(){
    return (String) SpectatorTable.getModel().getValueAt(10, 1);
}
public String getSpectator12name(){
    return (String) SpectatorTable.getModel().getValueAt(11, 1);
}
public String getSpectator13name(){
    return (String) SpectatorTable.getModel().getValueAt(12, 1);
}
public String getSpectator14name(){
    return (String) SpectatorTable.getModel().getValueAt(13, 1);
}
public String getSpectator15name(){
    return (String) SpectatorTable.getModel().getValueAt(14, 1);
}
public String getSpectator16name(){
    return (String) SpectatorTable.getModel().getValueAt(15, 1);
}
public String getSpectator17name(){
    return (String) SpectatorTable.getModel().getValueAt(16, 1);
}
public String getSpectator18name(){
    return (String) SpectatorTable.getModel().getValueAt(17, 1);
}
public String getSpectator19name(){
    return (String) SpectatorTable.getModel().getValueAt(18, 1);
}
public String getSpectator20name(){
    return (String) SpectatorTable.getModel().getValueAt(19, 1);
}


public String getGender(){
    if(genderChooseBox.getSelectedItem()=="Male Tournament"){
        return "male";
    }else{
        return "femae";
    }
}
    public String getSwimmingType() {
        if (typeComboBox.getSelectedItem() == "Butterfly Stroke") {
            return "ButterflyStroke";
        } else if (typeComboBox.getSelectedItem() == "Back Stroke") {
            return "BackStroke";
        } else if (typeComboBox.getSelectedItem() == "Breast Stroke") {
            return "BreastStroke";
        } else {
            return "FreeStyle";

        }
    }
}
